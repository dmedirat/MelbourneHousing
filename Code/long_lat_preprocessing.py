# -*- coding: utf-8 -*-
"""Long/Lat Preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ydNLJaND9hZZlaiVrq_C15gl3tEEblYQ
"""

import pandas as pd
import numpy as np
from sklearn.metrics import mean_absolute_error, mean_squared_error
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt
from geopy.geocoders import Nominatim
import seaborn as sns
from scipy import stats
from sklearn.linear_model import LinearRegression
from sklearn.impute import SimpleImputer
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.feature_selection import SelectKBest
from sklearn.feature_selection import chi2
from sklearn.model_selection import KFold
from sklearn.svm import SVR
import warnings
warnings.filterwarnings('ignore')

data1 = pd.read_csv('Melbourne_housing_FULL.csv')

data.isna().sum()

count = 0
for index, row in data.iterrows():
  if(count>2400):
    break
  if(pd.isna(row['Lattitude']) or pd.isna(row['Longtitude'])):
    count = count + 1   
    print(index)
    address = row['Address'] + ' '+ row['Suburb']
    geolocator = Nominatim(user_agent="Melbourne Housing Prediction")
    location = geolocator.geocode(address)  
    print(address)
    if location is not None:
      data.Lattitude.loc[index] = location.latitude
      data.Longtitude.loc[index] = location.longitude

data.isna().sum()

data.to_excel("output8.xlsx")